kind: Secret
apiVersion: v1
metadata:
  name: jks-password-secret
  <%_ if (istio) { _%>
  namespace: istio-system
  <%_ } else { _%>
  namespace: <%= kubernetesNamespace %>
  <%_ } _%>
data:
  password-key: MTIzNDU2
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: pkcs12-password-secret
  <%_ if (istio) { _%>
  namespace: istio-system
  <%_ } else { _%>
  namespace: <%= kubernetesNamespace %>
  <%_ } _%>
data:
  password-key: MTIzNDU2
type: Opaque
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: keycloak-cert
  <%_ if (istio) { _%>
  namespace: istio-system
  <%_ } else { _%>
  namespace: <%= kubernetesNamespace %>
  <%_ } _%>
spec:
  secretName: keycloak-tls-secret
  issuerRef:
    name: clusterissuer
    kind: ClusterIssuer
  dnsNames:
    <%_ if (ingressDomain) { _%>
      - keycloak.<%= kubernetesNamespace %>.<%= ingressDomain %>
    <%_ } else { _%>
      - keycloak      
    <%_ } _%>
  keystores:
    jks:
      create: true
      passwordSecretRef: # Password used to encrypt the keystore
        key: password-key
        name: pkcs12-password-secret
    pkcs12:
      create: true
      passwordSecretRef: # Password used to encrypt the keystore
        key: password-key
        name: jks-password-secret
  <%_ if (istio) { _%>
  # istio requires secret replication with reflector
  # $ kubectl -n kube-system apply -f https://github.com/emberstack/kubernetes-reflector/releases/latest/download/reflector.yaml
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "<%= kubernetesNamespace %>"
  <%_ } _%>